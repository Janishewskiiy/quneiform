if(CMAKE_BUILD_TYPE STREQUAL Debug)
    add_definitions(-D_DEBUG)
    if(UNIX)
        SET_COMPILER_FLAG_DEBUG(-O0)
        SET_COMPILER_FLAG_DEBUG(-fvisibility=default)
        SET_COMPILER_FLAG_DEBUG(-Wall)
        SET_COMPILER_FLAG_DEBUG(-Wextra)
        SET_COMPILER_FLAG_DEBUG(-Wconversion)
        SET_COMPILER_FLAG_DEBUG(-fno-inline)
        SET_COMPILER_FLAG_DEBUG(-Woverloaded-virtual)
        SET_COMPILER_FLAG_DEBUG(-Wctor-dtor-privacy)
        SET_COMPILER_FLAG_DEBUG(-Wnon-virtual-dtor)
        SET_COMPILER_FLAG_DEBUG(-Wconversion)
        SET_COMPILER_FLAG_DEBUG(-Wsign-conversion)
        SET_COMPILER_FLAG_DEBUG(-Winit-self)
    endif()

    if(TESTS)
        if(WITH_COVERAGE)
            # enable coverage analysis using GCC and GCOV
            if(CMAKE_COMPILER_IS_GNUCC)
                set(CMAKE_C_FLAGS_DEBUG "${CMAKE_C_FLAGS_DEBUG} -fprofile-arcs -ftest-coverage")
                set(CMAKE_CXX_FLAGS_DEBUG "${CMAKE_CXX_FLAGS_DEBUG} -fprofile-arcs -ftest-coverage")
                set(CMAKE_EXE_LINKER_FLAGS "${CMAKE_EXE_LINKER_FLAGS} -fprofile-arcs -ftest-coverage -lgcov")
            endif()
        endif()
    endif()

    if(CMAKE_SYSTEM_NAME STREQUAL Linux)
        # setting linker warning flags
        set(CMAKE_SHARED_LINKER_FLAGS "-Wl,--warn-common")
    endif()

    message(STATUS "Debug compiler flags are: ${CMAKE_CXX_FLAGS_DEBUG}")
endif()
