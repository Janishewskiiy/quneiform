add_definitions(-DDPUMA_SNAP)

set(CF_RSTR_SOURCE
    abris.cpp
    abrtools.cpp
    acc_tabs.cpp
    accents.cpp
    alcutfun.cpp
    alphabet.cpp
    atlant.cpp
    baton.cpp
    belarus.cpp
    bold.cpp
    cell.cpp
    celldump.cpp
    cg_hcut.cpp
    cg_main.cpp
    cg_smcut.cpp
    cg_tools.cpp
    compkit.cpp
    context.cpp
    contools.cpp
    corners.cpp
    cutgraph.cpp
    cutpoint.cpp
    defpoint.cpp
    diff.cpp
    differ.cpp
    diffr.cpp
    diffrang.cpp
    diffrb.cpp
    diffrv.cpp
    dm1.cpp
    dm2.cpp
    dmacc.cpp
    dmbox.cpp
    dms.cpp
    embbox.cpp
    erect2.cpp
    erection.cpp
    findiff.cpp
    fontprop.cpp
    fontser.cpp
    glue.cpp
    il1peak.cpp
    il1tg.cpp
    iot.cpp
    lang_fil.cpp
    lettab.cpp
    lineout.cpp
    match_wd.cpp
    mmx_addr.cpp
    p2_bold.cpp
    p2_cour.cpp
    pass3.cpp
    passe.cpp
    perc.cpp
    prop.cpp
    proport.cpp
    proptab.cpp
    punct.cpp
    rastror.cpp
    rcm.cpp
    rcontext.cpp
    rstr_bl.cpp
    rstr_con.cpp
    rstr_lik.cpp
    rstr_p2.cpp
    scalar.cpp
    shaving.cpp
    shevron.cpp
    skew.cpp
    snap.cpp
    space.cpp
    spec_sym.cpp
    st_tools.cpp
    stic_big.cpp
    stic_cha.cpp
    stic_def.cpp
    stic_dis.cpp
    stic_frt.cpp
    stic_mak.cpp
    sweeper.cpp
    tm.cpp
    tools.cpp
    ukr.cpp
)

set(CF_RSTR_HEADERS)

add_library(${CF_RSTR} ${LIBTYPE}
    ${SNP_SRC}
    ${CF_RSTR_SOURCE}
    ${RSTR_HEADERS}
)

cf_hide_visibility(${CF_RSTR})
set_property(TARGET ${CF_RSTR} PROPERTY COMPILE_DEFINITIONS __RSTR__)

target_link_libraries(${CF_RSTR}
    ${CF_COMMON}
    ${CF_CCOM}
    ${CF_CLINE}
    ${CF_CSTR}
    ${CF_CTB}
    ${CF_EVN}
    ${CF_FON}
    ${CF_MMX}
    ${CF_MSK}
    ${CF_PASS2}
    ${CF_RBAL}
    ${CF_RCUTP}
    ${CF_RLING}
    ${CF_RSADD}
    ${CF_STD}
    ${CF_LEO}
)

cf_install_library(${CF_RSTR})

if(TESTS)
    add_library(${CF_RSTR}-static STATIC
        ${CF_RSTR_SOURCE}
    )

    target_link_libraries(${CF_RSTR}-static
        ${CF_RLING}
        ${CF_CLINE}
        ${CF_LEO}
        ${CF_RCUTP}
        ${CF_PASS2}
        ${CF_RSADD}
        ${CF_RBAL}
    )
endif()

cf_cppcheck(${CF_RSTR})
